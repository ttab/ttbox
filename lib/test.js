(function() {
  var lc, type_annat, type_fotograf, type_person, type_pris, type_prod;

  lc = function(s) {
    return s != null ? s.toLowerCase() : void 0;
  };

  type_prod = ttbox.type('produkt', {
    className: 'produkttype',
    desc: 'en produktkod',
    suggest: function(word, cb, type) {
      return cb([
        {
          value: 'FOTO',
          desc: 'Alla foton'
        }, {
          value: 'FOBHUS',
          desc: 'Bildhuset'
        }, {
          value: 'FODN',
          desc: 'DN'
        }, {
          value: 'FOEKO',
          desc: 'Ekonomi'
        }
      ].filter(function(i) {
        return lc(i.value).indexOf(lc(word)) === 0;
      }));
    },
    format: function(t) {
      return t.toUpperCase();
    }
  });

  type_pris = ttbox.type('pris', {
    desc: 'ett pris',
    limitOne: true,
    suggest: function(word, cb, type) {
      return cb(['500kr', '1000kr', '1500kr'].filter(function(i) {
        return lc(i).indexOf(lc(word)) === 0;
      }));
    }
  });

  type_fotograf = ttbox.type('fotograf', {
    desc: 'fotografens namn',
    suggest: function(word, cb, type) {
      return cb(['Martin Algesten', 'Peter Johansson', 'Björn Allan Åhlberg'].filter(function(i) {
        return lc(i).indexOf(lc(word)) === 0;
      }));
    }
  });

  type_annat = ttbox.type('annat', {
    desc: 'andra grejer',
    format: function(t) {
      return t.toUpperCase();
    }
  });

  type_person = ttbox.type('person', {
    desc: 'Person',
    suggest: function(word, cb, type) {
      return cb(['bag', 'jej', 'mag', 'pjn'].filter(function(i) {
        return lc(i).indexOf(lc(word)) === 0;
      }));
    }
  });

  this.b = ttbox($('#myinput'), ttbox.trig(':', [ttbox.divider('Sökbegränsningar'), type_prod, type_pris, type_fotograf, ttbox.divider('Övrigt'), type_annat]), ttbox.trig('@', {
    prefix: true,
    className: 'persontrig'
  }, type_person));

  this.b.placeholder('Testa : eller @');

  this.b.setvalues([
    {
      type: type_fotograf,
      item: 'Björn Allan Åhlberg'
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZXMiOlsidGVzdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7QUFBQSxNQUFBOztFQUFBLEVBQUEsR0FBSyxTQUFDLENBQUQ7dUJBQU8sQ0FBQyxDQUFFLFdBQUgsQ0FBQTtFQUFQOztFQUVMLFNBQUEsR0FBWSxLQUFLLENBQUMsSUFBTixDQUFXLFNBQVgsRUFDVjtJQUFBLFNBQUEsRUFBVyxhQUFYO0lBQ0EsSUFBQSxFQUFNLGVBRE47SUFFQSxPQUFBLEVBQVMsU0FBQyxJQUFELEVBQU8sRUFBUCxFQUFXLElBQVg7YUFBb0IsRUFBQSxDQUFHO1FBQzVCO1VBQUMsS0FBQSxFQUFNLE1BQVA7VUFBaUIsSUFBQSxFQUFLLFlBQXRCO1NBRDRCLEVBRTVCO1VBQUMsS0FBQSxFQUFNLFFBQVA7VUFBaUIsSUFBQSxFQUFLLFdBQXRCO1NBRjRCLEVBRzVCO1VBQUMsS0FBQSxFQUFNLE1BQVA7VUFBaUIsSUFBQSxFQUFLLElBQXRCO1NBSDRCLEVBSTVCO1VBQUMsS0FBQSxFQUFNLE9BQVA7VUFBaUIsSUFBQSxFQUFLLFNBQXRCO1NBSjRCO09BSy9CLENBQUMsTUFMOEIsQ0FLdkIsU0FBQyxDQUFEO2VBQU8sRUFBQSxDQUFHLENBQUMsQ0FBQyxLQUFMLENBQVcsQ0FBQyxPQUFaLENBQW9CLEVBQUEsQ0FBRyxJQUFILENBQXBCLENBQUEsS0FBZ0M7TUFBdkMsQ0FMdUIsQ0FBSDtJQUFwQixDQUZUO0lBUUEsTUFBQSxFQUFRLFNBQUMsQ0FBRDthQUFPLENBQUMsQ0FBQyxXQUFGLENBQUE7SUFBUCxDQVJSO0dBRFU7O0VBV1osU0FBQSxHQUFZLEtBQUssQ0FBQyxJQUFOLENBQVcsTUFBWCxFQUNSO0lBQUEsSUFBQSxFQUFNLFVBQU47SUFDQSxRQUFBLEVBQVUsSUFEVjtJQUVBLE9BQUEsRUFBUyxTQUFDLElBQUQsRUFBTyxFQUFQLEVBQVcsSUFBWDthQUFvQixFQUFBLENBQUcsQ0FDNUIsT0FENEIsRUFFNUIsUUFGNEIsRUFHNUIsUUFINEIsQ0FJL0IsQ0FBQyxNQUo4QixDQUl2QixTQUFDLENBQUQ7ZUFBTyxFQUFBLENBQUcsQ0FBSCxDQUFLLENBQUMsT0FBTixDQUFjLEVBQUEsQ0FBRyxJQUFILENBQWQsQ0FBQSxLQUEwQjtNQUFqQyxDQUp1QixDQUFIO0lBQXBCLENBRlQ7R0FEUTs7RUFTWixhQUFBLEdBQWdCLEtBQUssQ0FBQyxJQUFOLENBQVcsVUFBWCxFQUNaO0lBQUEsSUFBQSxFQUFNLGtCQUFOO0lBQ0EsT0FBQSxFQUFTLFNBQUMsSUFBRCxFQUFPLEVBQVAsRUFBVyxJQUFYO2FBQW9CLEVBQUEsQ0FBRyxDQUM1QixpQkFENEIsRUFFNUIsaUJBRjRCLEVBRzVCLHFCQUg0QixDQUkvQixDQUFDLE1BSjhCLENBSXZCLFNBQUMsQ0FBRDtlQUFPLEVBQUEsQ0FBRyxDQUFILENBQUssQ0FBQyxPQUFOLENBQWMsRUFBQSxDQUFHLElBQUgsQ0FBZCxDQUFBLEtBQTBCO01BQWpDLENBSnVCLENBQUg7SUFBcEIsQ0FEVDtHQURZOztFQVFoQixVQUFBLEdBQWEsS0FBSyxDQUFDLElBQU4sQ0FBVyxPQUFYLEVBQ1Q7SUFBQSxJQUFBLEVBQU0sY0FBTjtJQUNBLE1BQUEsRUFBUSxTQUFDLENBQUQ7YUFBTyxDQUFDLENBQUMsV0FBRixDQUFBO0lBQVAsQ0FEUjtHQURTOztFQUliLFdBQUEsR0FBYyxLQUFLLENBQUMsSUFBTixDQUFXLFFBQVgsRUFDVjtJQUFBLElBQUEsRUFBTSxRQUFOO0lBQ0EsT0FBQSxFQUFTLFNBQUMsSUFBRCxFQUFPLEVBQVAsRUFBVyxJQUFYO2FBQW9CLEVBQUEsQ0FBRyxDQUM1QixLQUQ0QixFQUU1QixLQUY0QixFQUc1QixLQUg0QixFQUk1QixLQUo0QixDQUsvQixDQUFDLE1BTDhCLENBS3ZCLFNBQUMsQ0FBRDtlQUFPLEVBQUEsQ0FBRyxDQUFILENBQUssQ0FBQyxPQUFOLENBQWMsRUFBQSxDQUFHLElBQUgsQ0FBZCxDQUFBLEtBQTBCO01BQWpDLENBTHVCLENBQUg7SUFBcEIsQ0FEVDtHQURVOztFQVNkLElBQUksQ0FBQyxDQUFMLEdBQVMsS0FBQSxDQUFNLENBQUEsQ0FBRSxVQUFGLENBQU4sRUFBcUIsS0FBSyxDQUFDLElBQU4sQ0FBVyxHQUFYLEVBQWdCLENBQzFDLEtBQUssQ0FBQyxPQUFOLENBQWMsa0JBQWQsQ0FEMEMsRUFFMUMsU0FGMEMsRUFHMUMsU0FIMEMsRUFJMUMsYUFKMEMsRUFLMUMsS0FBSyxDQUFDLE9BQU4sQ0FBYyxRQUFkLENBTDBDLEVBTTFDLFVBTjBDLENBQWhCLENBQXJCLEVBT0QsS0FBSyxDQUFDLElBQU4sQ0FBVyxHQUFYLEVBQWdCO0lBQUEsTUFBQSxFQUFPLElBQVA7SUFBYSxTQUFBLEVBQVUsWUFBdkI7R0FBaEIsRUFDSixXQURJLENBUEM7O0VBV1QsSUFBSSxDQUFDLENBQUMsQ0FBQyxXQUFQLENBQW1CLGlCQUFuQjs7RUFFQSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVAsQ0FBaUI7SUFBQztNQUFDLElBQUEsRUFBSyxhQUFOO01BQXFCLElBQUEsRUFBSyxxQkFBMUI7S0FBRDtHQUFqQjtBQXhEQSIsInNvdXJjZXNDb250ZW50IjpbIlxubGMgPSAocykgLT4gcz8udG9Mb3dlckNhc2UoKVxuXG50eXBlX3Byb2QgPSB0dGJveC50eXBlICdwcm9kdWt0JyxcbiAgY2xhc3NOYW1lOiAncHJvZHVrdHR5cGUnXG4gIGRlc2M6ICdlbiBwcm9kdWt0a29kJ1xuICBzdWdnZXN0OiAod29yZCwgY2IsIHR5cGUpIC0+IGNiIFtcbiAgICAgIHt2YWx1ZTonRk9UTycsICAgZGVzYzonQWxsYSBmb3Rvbid9XG4gICAgICB7dmFsdWU6J0ZPQkhVUycsIGRlc2M6J0JpbGRodXNldCd9XG4gICAgICB7dmFsdWU6J0ZPRE4nLCAgIGRlc2M6J0ROJ31cbiAgICAgIHt2YWx1ZTonRk9FS08nLCAgZGVzYzonRWtvbm9taSd9XG4gIF0uZmlsdGVyIChpKSAtPiBsYyhpLnZhbHVlKS5pbmRleE9mKGxjIHdvcmQpID09IDBcbiAgZm9ybWF0OiAodCkgLT4gdC50b1VwcGVyQ2FzZSgpXG5cbnR5cGVfcHJpcyA9IHR0Ym94LnR5cGUgJ3ByaXMnLFxuICAgIGRlc2M6ICdldHQgcHJpcydcbiAgICBsaW1pdE9uZTogdHJ1ZVxuICAgIHN1Z2dlc3Q6ICh3b3JkLCBjYiwgdHlwZSkgLT4gY2IgW1xuICAgICAgICAnNTAwa3InXG4gICAgICAgICcxMDAwa3InXG4gICAgICAgICcxNTAwa3InXG4gICAgXS5maWx0ZXIgKGkpIC0+IGxjKGkpLmluZGV4T2YobGMgd29yZCkgPT0gMFxuXG50eXBlX2ZvdG9ncmFmID0gdHRib3gudHlwZSAnZm90b2dyYWYnLFxuICAgIGRlc2M6ICdmb3RvZ3JhZmVucyBuYW1uJ1xuICAgIHN1Z2dlc3Q6ICh3b3JkLCBjYiwgdHlwZSkgLT4gY2IgW1xuICAgICAgICAnTWFydGluIEFsZ2VzdGVuJ1xuICAgICAgICAnUGV0ZXIgSm9oYW5zc29uJ1xuICAgICAgICAnQmrDtnJuIEFsbGFuIMOFaGxiZXJnJ1xuICAgIF0uZmlsdGVyIChpKSAtPiBsYyhpKS5pbmRleE9mKGxjIHdvcmQpID09IDBcblxudHlwZV9hbm5hdCA9IHR0Ym94LnR5cGUgJ2FubmF0JyxcbiAgICBkZXNjOiAnYW5kcmEgZ3JlamVyJ1xuICAgIGZvcm1hdDogKHQpIC0+IHQudG9VcHBlckNhc2UoKVxuXG50eXBlX3BlcnNvbiA9IHR0Ym94LnR5cGUgJ3BlcnNvbicsXG4gICAgZGVzYzogJ1BlcnNvbidcbiAgICBzdWdnZXN0OiAod29yZCwgY2IsIHR5cGUpIC0+IGNiIFtcbiAgICAgICAgJ2JhZydcbiAgICAgICAgJ2plaidcbiAgICAgICAgJ21hZydcbiAgICAgICAgJ3BqbidcbiAgICBdLmZpbHRlciAoaSkgLT4gbGMoaSkuaW5kZXhPZihsYyB3b3JkKSA9PSAwXG5cbnRoaXMuYiA9IHR0Ym94ICQoJyNteWlucHV0JyksIHR0Ym94LnRyaWcoJzonLCBbXG4gICAgdHRib3guZGl2aWRlciAnU8O2a2JlZ3LDpG5zbmluZ2FyJ1xuICAgIHR5cGVfcHJvZFxuICAgIHR5cGVfcHJpc1xuICAgIHR5cGVfZm90b2dyYWZcbiAgICB0dGJveC5kaXZpZGVyICfDlnZyaWd0J1xuICAgIHR5cGVfYW5uYXRcbiAgICBdKSwgdHRib3gudHJpZygnQCcsIHByZWZpeDp0cnVlLCBjbGFzc05hbWU6J3BlcnNvbnRyaWcnLFxuICAgIHR5cGVfcGVyc29uXG4gICAgKVxuXG50aGlzLmIucGxhY2Vob2xkZXIgJ1Rlc3RhIDogZWxsZXIgQCdcblxudGhpcy5iLnNldHZhbHVlcyBbe3R5cGU6dHlwZV9mb3RvZ3JhZiwgaXRlbTonQmrDtnJuIEFsbGFuIMOFaGxiZXJnJ31dXG4iXX0=
